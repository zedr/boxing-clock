#:kivy 1.9.1
#:import LedLabel boxe_clock.labels.LedLabel
#:import LedButton boxe_clock.buttons.LedButton
#:import TimerButton boxe_clock.buttons.TimerButton
#:import format_time boxe_clock.utils.format_time

<RowLayout@BoxLayout>:
    orientation: "vertical"

<Row@BoxLayout>:
    orientation: "horizontal"

<MenuLabel@Label>:
    markup: True

<MenuSlider@Slider>:
    step: 10
    value_track: True

<AppRoot>:
    direction: "right"

    TimerButton:
        id: timer_button
        background_color: 0,0,0,1
        markup: True
        font_size: root.bff * 480
        on_press:
            self.toggle()
        RowLayout:
            pos: self.parent.pos
            size: self.parent.size
            id: timer
            padding: -50,-50,-50,-50
            LedLabel:
                id: status_label
                font_size: root.bff * 96
                text: timer_button.clock_state_verbose
            Label:
            LedLabel:
                font_size: root.bff * 192
                text: timer_button.round_verbose

    RowLayout:
        Row:
            Label:
                text: "Configuration"
                font_size: root.bff * 64
        Row:
            MenuLabel:
                text: "Round time:"
                halign: "right"
                size_hint: 0.75, 1
                font_size: root.bff * 32
            MenuLabel:
                text: format_time(int(round_slider.value))
                size_hint: 0.25, 1
                font_size: root.bff * 32
            MenuSlider:
                id: round_slider
                range: 30, 600
                step: 30
                value: timer_button.config.round_duration
                size_hint: 1.5, 1
                font_size: root.bff * 32
                on_value:
                    timer_button.config.round_duration = int(self.value)
        Row:
            MenuLabel:
                text: "Warmup time:"
                halign: "right"
                size_hint: 0.75, 1
                font_size: root.bff * 32
            MenuLabel:
                text: format_time(int(warmup_slider.value))
                size_hint: 0.25, 1
                font_size: root.bff * 32
            MenuSlider:
                id: warmup_slider
                range: 0, 300
                value: timer_button.config.warmup_duration
                size_hint: 1.5, 1
                on_value:
                    timer_button.config.warmup_duration = int(self.value)
        Row:
            MenuLabel:
                text: "Recovery time:"
                halign: "right"
                size_hint: 0.75, 1
                font_size: root.bff * 32
            MenuLabel:
                text: format_time(int(recovery_slider.value))
                size_hint: 0.25, 1
                font_size: root.bff * 32
            MenuSlider:
                id: recovery_slider
                range: 0, 300
                step: 10
                value: timer_button.config.recovery_duration
                size_hint: 1.5, 1
                on_value:
                    timer_button.config.recovery_duration = int(self.value)
        Row:
            MenuLabel:
                text: "Rounds:"
                halign: "right"
                size_hint: 0.75, 1
                font_size: root.bff * 32
            MenuLabel:
                text: str(int(rounds_slider.value))
                size_hint: 0.25, 1
                font_size: root.bff * 32
            MenuSlider:
                id: rounds_slider
                range: 1,32
                step: 1
                value: timer_button.config.rounds_max
                size_hint: 1.5, 1
                on_value:
                    timer_button.config.rounds_max = int(self.value)
        Row:
            MenuLabel:
                text: "Bell sound:"
                halign: "right"
                size_hint: 0.75, 1
                font_size: root.bff * 32
            Button:
                size_hint: 1.75, 1
                font_size: root.bff * 32
                text: timer_button.config.bells.current.name
                on_press:
                    timer_button.config.bells.rotate()
                    timer_button.config.bells.current.sound.play()
                    self.text = timer_button.config.bells.current.name
